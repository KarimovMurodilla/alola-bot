[tool.poetry]
name = "asia-plast-bot"
version = "0.1.0"
description = "Official telegram bot for Asia plast"
authors = ["MassonNn <ilyalyapin@duck.com>"]
license = "MIT License"
readme = "README.md"
packages = []

[tool.poetry.dependencies]
python = "^3.10"
aiofiles = "^23.2.1"
aiogram = "^3.12.0"
aiohttp = "^3.9.5"
aiosignal = "^1.3.1"
aiosqlite = "^0.20.0"
alembic = "^1.13.1"
annotated-types = "^0.7.0"
anyio = "^4.4.0"
appdirs = "^1.4.4"
async-timeout = "^4.0.3"
asyncpg = "^0.28.0"
attrs = "^23.2.0"
Babel = "^2.15.0"
beautifulsoup4 = "^4.12.3"
bs4 = "^0.0.2"
certifi = "^2024.6.2"
cffi = "^1.16.0"
charset-normalizer = "^3.3.2"
click = "^8.1.7"
colorama = "^0.4.6"
cssselect = "^1.2.0"
dnspython = "^2.6.1"
email_validator = "^2.1.1"
environs = "^10.3.0"
exceptiongroup = "^1.2.1"
fake-useragent = "^1.5.1"
fastapi = "^0.110.3"
fastapi-cli = "^0.0.4"
fluentogram = "^1.1.7"
frozenlist = "^1.4.1"
fuzzywuzzy = "^0.18.0"
greenlet = "^2.0.2"
h11 = "^0.14.0"
httpcore = "^1.0.5"
httptools = "^0.6.1"
httpx = "^0.27.0"
idna = "^3.7"
importlib_metadata = "^8.0.0"
itsdangerous = "^2.2.0"

[tool.poetry.group.dev]
optional=true

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.1"
pytest-asyncio = "^0.20.3"
mypy = "^1.0.1"
ruff = "^0.0.275"
blue = "^0.9.1"

[tool.ruff]
line-length = 88
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py310"
select = [
    "E", # pycodestyle
    "F", # pyflakes
    "UP", # pyupgrade
    "D", # pydocstyle
]
fixable = [
    "A", "C", "D", "E", "F", "G",
    "I", "N", "Q", "S", "T", "W", "ANN",
    "ARG", "BLE", "COM", "DJ", "DTZ", "EM",
    "ERA", "EXE", "FBT", "ICN", "INP", "ISC",
    "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH",
    "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH",
    "TID", "TRY", "UP", "YTT"
]
unfixable = ["B"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.flake8-quotes]
docstring-quotes = "double"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
